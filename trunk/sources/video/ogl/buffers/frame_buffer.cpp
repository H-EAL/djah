#include "video/ogl/buffers/frame_buffer.hpp"
#include "video/ogl/buffers/render_buffer.hpp"

#include "debug/logger.hpp"

namespace djah { namespace video { namespace ogl {

	//----------------------------------------------------------------------------------------------
	frame_buffer::frame_buffer()
	{
		aquire();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	frame_buffer::~frame_buffer()
	{
		release();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void frame_buffer::aquire()
	{
		glGenFramebuffers(1, &id_);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void frame_buffer::release()
	{
		glDeleteFramebuffers(1, &id_);
		id_ = INVALID_ID;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	bool frame_buffer::isValidResource() const
	{
		return glIsFramebuffer(id_) != 0;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void frame_buffer::bind() const
	{
		glBindFramebuffer(GL_FRAMEBUFFER, id_);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void frame_buffer::unbind()
	{
		glBindFramebuffer(GL_FRAMEBUFFER, 0);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void frame_buffer::attachRenderBuffer(const render_buffer &renderBuffer)
	{
		glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_RENDERBUFFER, renderBuffer.id());
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void frame_buffer::attachTexture(const texture &tex)
	{
	}
	//----------------------------------------------------------------------------------------------

} /*ogl*/ } /*video*/ } /*djah*/
