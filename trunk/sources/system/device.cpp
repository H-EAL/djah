#include "system/device.hpp"
#include "system//opengl/opengl_driver.hpp"

namespace djah { namespace system {

	//----------------------------------------------------------------------------------------------
	device_ptr create_device(const video_config &cfg)
	{
		device_ptr dev	  = new_platform_specific_device();
		driver_ptr driver = new opengl_driver(dev);
		dev->setVideoDriver(driver);
		dev->create(cfg);
		driver->create();
		return dev;
	}
	//----------------------------------------------------------------------------------------------
	device_ptr create_device(int width, int height,
							 int colorBits, int depthBits, int stencilBits,
							 bool fullscreen, bool vsync)
	{
		return create_device( video_config(width, height, colorBits, depthBits, stencilBits, fullscreen, vsync) );
	}
	//----------------------------------------------------------------------------------------------




	//----------------------------------------------------------------------------------------------
	device_ptr device::s_device_inst_ = 0;
	//----------------------------------------------------------------------------------------------

	//----------------------------------------------------------------------------------------------
	device_ptr device::get_current()
	{
		return s_device_inst_;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	device::device()
		: hasToQuit_(false)
		, driver_(0)
	{
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	device::~device()
	{
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	const video_config& device::videoConfig() const
	{
		return video_config_;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void device::setVideoDriver(driver_ptr driver)
	{
		driver_ = driver;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	driver_ptr device::videoDriver() const
	{
		return driver_;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void device::create(const video_config &cfg)
	{
		s_device_inst_ = this;
		video_config_ = cfg;
		createImpl();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void device::destroy()
	{
		driver_->destroy();
		delete driver_;
		driver_ = 0;

		destroyImpl();
		s_device_inst_ = 0;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	bool device::run()
	{
		return !hasToQuit_ && runImpl();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void device::shutDown()
	{
		hasToQuit_ = true;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void device::resize(int width, int height)
	{
		driver_->setViewport(geometry::rect_i(0,0,width,height));
	}
	//----------------------------------------------------------------------------------------------

} /*system*/ } /*djah*/