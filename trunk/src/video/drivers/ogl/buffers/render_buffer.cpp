#include "video/drivers/ogl/buffers/render_buffer.hpp"
#include "video/drivers/opengl_include.hpp"

#include "log/logger.hpp"

namespace djah { namespace video { namespace drivers { namespace ogl {

	//----------------------------------------------------------------------------------------------
	render_buffer::render_buffer(int width, int height)
		: texture(width, height)
	{
		aquire();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	render_buffer::~render_buffer()
	{
		release();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::aquire()
	{
		glGenRenderbuffers(1, &id_);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::release()
	{
		glDeleteRenderbuffers(1, &id_);
		id_ = INVALID_ID;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::bind() const
	{
		glBindRenderbuffer(GL_FRAMEBUFFER, id_);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::unbind()
	{
		glBindRenderbuffer(GL_FRAMEBUFFER, 0);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::initialize(E_INTERNAL_FORMAT internalFormat)
	{
		glRenderbufferStorage(GL_RENDERBUFFER, internalFormat, width_, height_);
	}
	//----------------------------------------------------------------------------------------------

} /*ogl*/ } /*drivers*/ } /*video*/ } /*djah*/