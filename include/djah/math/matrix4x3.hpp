#ifndef DJAH_MATH_MATRIX4X3_HPP
#define DJAH_MATH_MATRIX4X3_HPP

#include "matrix.hpp"

namespace djah { namespace math {
	
	//----------------------------------------------------------------------------------------------
	template<typename T>
	struct matrix_base<4,3,T>
	{
		matrix_base() { memset(data, 0, 4*3*sizeof(T)); }
		matrix_base(T _11_, T _12_, T _13_,  T _21_, T _22_, T _23_,  T _31_, T _32_, T _33_,  T _41_, T _42_, T _43_)
			: _11(_11_), _12(_12_), _13(_13_)
			, _21(_21_), _22(_22_), _23(_23_)
			, _31(_31_), _32(_32_), _33(_33_)
			, _41(_41_), _42(_42_), _43(_43_)
		{}
		
		union
		{
			struct
			{
				T _11, _12, _13;
				T _21, _22, _23;
				T _31, _32, _33;
				T _41, _42, _43;
			};
			T data[4][3];
		};
	};
	//----------------------------------------------------------------------------------------------

	//----------------------------------------------------------------------------------------------
	typedef matrix<4,3,int>		matrix4x3i;
	typedef matrix<4,3,float>	matrix4x3f;
	typedef matrix<4,3,double>	matrix4x3d;
	//----------------------------------------------------------------------------------------------

} /*math*/ } /*djah*/

#endif /* DJAH_MATH_MATRIX4X3_HPP */