#include "platform.hpp"
#ifdef DJAH_COMPILE_LINUX

#include "video/devices/x11device.hpp"

#include <cassert>
#include <GL/gl.h>

#include <stdio.h>
#include <stdlib.h>
#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/Xos.h>
#include <X11/Xatom.h>
#include <X11/keysym.h>

#include "geometry/rect.hpp"


namespace djah { namespace video { namespace devices {

	//----------------------------------------------------------------------------------------------
	x11device::x11device()
	{
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	x11device::~x11device()
	{
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void x11device::createImpl()
	{
		display_ = XOpenDisplay(0);

		XSetWindowAttributes attributes;

		window_  = XCreateWindow
		(
			display_, 
			XRootWindow(display_, 0), 
			0, 0, 
			video_config_.width_, video_config_.height_,
			0,
			video_config_.depthBits_,
			InputOutput,
			0,
			0,
			&attributes
		);
		
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void x11device::show()
	{
		
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	bool x11device::isWindowActive()
	{
		return true;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	bool x11device::hasWindowFocus()
	{
		return true;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void x11device::shutDown()
	{
		driver_->destroy();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void x11device::setWindowTitle(const std::string &title)
	{
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void x11device::resize(int width, int height)
	{
		driver_->setViewport(geometry::rect_i(0,0,width,height));
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	bool x11device::runImpl()
	{
		return true;
	}
	//----------------------------------------------------------------------------------------------

} /*devices*/ } /*video*/ } /*djah*/

#endif /*DJAH_COMPILE_WINDOWS */