#include "video/driver_base.hpp"
#include "video/device_base.hpp"

namespace djah { namespace video {

	//-------------------------------------------------------------------------------------------------
	driver_base::driver_base(device_base *device)
		: device_(device)
		, proj_dirty_(true)
	{
	}
	//-------------------------------------------------------------------------------------------------


	//-------------------------------------------------------------------------------------------------
	driver_base::~driver_base()
	{
	}
	//-------------------------------------------------------------------------------------------------


	//-------------------------------------------------------------------------------------------------
	void driver_base::setViewport(const geometry::rect_i &viewport)
	{
		viewport_ = viewport;
		updateViewport();
	}
	//-------------------------------------------------------------------------------------------------


	//-------------------------------------------------------------------------------------------------
	geometry::rect_i driver_base::getViewport() const
	{
		return viewport_;
	}
	//-------------------------------------------------------------------------------------------------


	//-------------------------------------------------------------------------------------------------
	math::matrix4f driver_base::getViewMatrix() const
	{
		return view_matrix_;
	}
	//-------------------------------------------------------------------------------------------------

	//-------------------------------------------------------------------------------------------------
	void driver_base::setViewMatrix(const math::matrix4f &view_mat)
	{
		view_matrix_ = view_mat;
	}
	//-------------------------------------------------------------------------------------------------

	//-------------------------------------------------------------------------------------------------
	math::matrix4f driver_base::getProjectionMatrix() const
	{
		return projection_matrix_;
	}
	//-------------------------------------------------------------------------------------------------

	//-------------------------------------------------------------------------------------------------
	void driver_base::setProjectionMatrix(const math::matrix4f &proj_mat)
	{
		projection_matrix_ = proj_mat;
		proj_dirty_ = true;
	}
	//-------------------------------------------------------------------------------------------------


} /*video*/ } /*djah*/