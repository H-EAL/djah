#include "system/input/keyboard.hpp"
#include "platform.hpp"

namespace djah { namespace system { namespace input {

	//----------------------------------------------------------------------------------------------
	keyboard::keyboard()
		: currentState_(0)
	{
		keysState_[0].resize(256, 0);
		keysState_[1].resize(256, 0);
	}
	//----------------------------------------------------------------------------------------------

	//----------------------------------------------------------------------------------------------
	keyboard::~keyboard()
	{
	}
	//----------------------------------------------------------------------------------------------

	//----------------------------------------------------------------------------------------------
	void keyboard::update()
	{
		currentState_ = (currentState_ + 1) % 2;
		GetKeyboardState( static_cast<PBYTE>(&keysState_[currentState_][0]) );
	}
	//----------------------------------------------------------------------------------------------
	
	//----------------------------------------------------------------------------------------------
	bool keyboard::isKeyDown(eKeyCode keyCode) const
	{
		return (keysState_[currentState_][keyCode] & 0x80) != 0;
	}
	//----------------------------------------------------------------------------------------------

	//----------------------------------------------------------------------------------------------
	bool keyboard::wasKeyDown(eKeyCode keyCode) const
	{
		const unsigned int previousState = (currentState_ + 1) % 2;
		return (keysState_[previousState][keyCode] & 0x80) != 0;
	}
	//----------------------------------------------------------------------------------------------

	//----------------------------------------------------------------------------------------------
	bool keyboard::pressed(eKeyCode keyCode) const
	{
		return ( !wasKeyDown(keyCode) && isKeyDown(keyCode) );
	}
	//----------------------------------------------------------------------------------------------

	//----------------------------------------------------------------------------------------------
	bool keyboard::released(eKeyCode keyCode) const
	{
		return ( wasKeyDown(keyCode) && !isKeyDown(keyCode) );
	}
	//----------------------------------------------------------------------------------------------

} /*input*/ } /*system*/ } /*djah*/