#include "system/gl.hpp"
#include "opengl/render_buffer.hpp"

#include "debug/log.hpp"

namespace djah { namespace opengl {

	//----------------------------------------------------------------------------------------------
	render_buffer::render_buffer(int internalFormat, int width, int height)
		: internalFormat_(internalFormat)
		, width_(width)
		, height_(height)
	{
		aquire();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	render_buffer::~render_buffer()
	{
		release();
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::aquire()
	{
		glGenRenderbuffers(1, &id_);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::release()
	{
		glDeleteRenderbuffers(1, &id_);
		id_ = INVALID_ID;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	bool render_buffer::isValidResource() const
	{
		return glIsRenderbuffer(id_) != 0;
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::bind() const
	{
		monitor<render_buffer>::bind(id_);
		glBindRenderbuffer(GL_RENDERBUFFER, id_);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::unbind()
	{
		monitor<render_buffer>::bind(0);
		glBindRenderbuffer(GL_RENDERBUFFER, 0);
	}
	//----------------------------------------------------------------------------------------------


	//----------------------------------------------------------------------------------------------
	void render_buffer::initialize()
	{
		monitor<render_buffer>::assert_if_not_bound(id_);
		glRenderbufferStorage(GL_RENDERBUFFER, internalFormat_, width_, height_);
	}
	//----------------------------------------------------------------------------------------------

} /*opengl*/ } /*djah*/
